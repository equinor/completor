name: Test

on:
  workflow_call: # Enables workflow to be called from another workflow.
  schedule:
    # Run CI every night and check that tests are working with the latest dependencies.
    - cron:  '0 0 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    env:
      PYTHONPATH: ${{ github.workspace }}/install/lib/python${{ matrix.python-version }}/site-packages:${{ github.workspace }}/install/lib/python${{ matrix.python-version }}/dist-packages

    steps:
      - name: Checkout commit locally
        uses: actions/checkout@v4

#      - name: Checkout tags
#        # Necessary for setuptools_scm to be able to infer the correct version.
#        run: git fetch --unshallow --tags

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true

      - name: Load cached venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python3-10.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Check pyproject.toml validity
        run: poetry check --no-interaction

      - name: Install dependencies
        run: |
          # poetry run pip install pyqt5-qt5
          poetry install --with dev --with ert --no-interaction

#      - name: Install Completor with dependencies
#        run: poetry install --without dev
#          pip install --upgrade pip
#          pip install ".[tests,ert]"

      - name: List all installed packages
        run: poetry show

      - name: Run tests
        run: poetry run pytest tests/
