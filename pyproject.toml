[project]
name = "completor"
version = "1.1.2"
description = "Advanced multi-segmented well completion tool."
authors = [
            {name = "Equinor ASA", email = "opensource@equinor.com"}
            ]
repository = "https://github.com/equinor/completor"
documentation = "https://equinor.github.io/completor"
license = {text = "LGPL-3.0-only" }
readme = "README.md"
package-mode = true
classifiers = [
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.11"

dependencies = [
    "matplotlib>=3.6",
    "numpy<2",
    "pandas>2.1.4",
    "scipy>1.10",
    "tqdm>4.50",
]

[project.urls]
"Bug Tracker" = "https://github.com/equinor/completor/issues"

[tool.poetry.dependencies]

docutils = {version="0.20.1", optional=true} # Pinned due to problems with OS spesific builds
rstcheck-core = {version="^1.2.1", optional=true}
ert = {version=">11.1.0", optional=true}
pyqt5-qt5 = {version="5.15.2", optional=true} # Pinned due to problems with OS spesific builds
pytest = {version="^8.3.3", optional=true}
pytest-xdist = {version="^3.6.1", optional=true}
pytest-env = {version="^1", optional=true}

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
flake8 = "^7.0.0"
pre-commit = "^4.0.1"
pytest = "^8.3.3"
pytest-xdist = "^3.6.1"
pytest-env = "^1"


[project.optional-dependencies]
test = ["pytest", "pytest-xdist", "pytest-env"]
ert = ["rstcheck-core", "ert", "pyqt5-qt5", "docutils"]

[project.scripts]
completor = "completor.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project.entry-points."ert"]
run_completor = "completor.hook_implementations.jobs"

[tool.black]
line-length = 120
target-version = ['py310']
include='\.pyi?$'
extend-exclude = '''\.git |
            \.__pycache__|
            \.hg|
            \.mypy_cache|
            \.tox|
            \.venv|
            _build|
            buck-out|
            build|
            dist'''

[tool.isort]
profile = "black"
line_length = 120

[tool.flake8]
max_line_length="132"
ignore="E203, W503, E704"

[tool.pytest.ini_options]
markers = ["integration: mark a test as an integration test."]
env = ["TQDM_DISABLE=1"]
