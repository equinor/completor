"use strict";(globalThis.webpackChunkdocumentation=globalThis.webpackChunkdocumentation||[]).push([[752],{6471:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>a});const l=JSON.parse('{"id":"about/configuration","title":"Completor Usage","description":"Step-by-step Completor Usage","source":"@site/docs/about/configuration.mdx","sourceDirName":"about","slug":"/about/configuration","permalink":"/completor/about/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/completor/tree/main/documentation/docs/about/configuration.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Completor Usage","sidebar_position":4,"description":"Step-by-step Completor Usage"},"sidebar":"docs","previous":{"title":"Completor Installation","permalink":"/completor/about/setup"},"next":{"title":"Completor Case File Examples","permalink":"/completor/about/examples"}}');var t=i(4848),o=i(8453);const s={title:"Completor Usage",sidebar_position:4,description:"Step-by-step Completor Usage"},r="Completor\xae Configuration",d={},a=[{value:"Keywords",id:"keywords",level:2},{value:"COMPLETION",id:"completion",level:3},{value:"JOINTLENGTH (optional)",id:"jointlength-optional",level:3},{value:"SEGMENTLENGTH (optional)",id:"segmentlength-optional",level:3},{value:"MINIMUM_SEGMENT_LENGTH (optional)",id:"minimum_segment_length-optional",level:3},{value:"USE_STRICT (optional)",id:"use_strict-optional",level:3},{value:"LATERAL_TO_DEVICE (optional)",id:"lateral_to_device-optional",level:3},{value:"MAPFILE (optional)",id:"mapfile-optional",level:3},{value:"GP_PERF_DEVICELAYER (optional)",id:"gp_perf_devicelayer-optional",level:3},{value:"PYTHON (optional)",id:"python-optional",level:3},{value:"Valve Keywords",id:"valve-keywords",level:2},{value:"WSEGAICD",id:"wsegaicd",level:3},{value:"WSEGSICD",id:"wsegsicd",level:3},{value:"WSEGVALV",id:"wsegvalv",level:3},{value:"WSEGDENSITY",id:"wsegdensity",level:3},{value:"WSEGDUALRCP",id:"wsegdualrcp",level:3},{value:"WSEGICV",id:"wsegicv",level:3},{value:"WSEGINJV",id:"wseginjv",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"completor-configuration",children:"Completor\xae Configuration"})}),"\n",(0,t.jsx)(n.p,{children:"Completor\xae reads two input files:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["A schedule file containing the multi-segment well definition in terms of ",(0,t.jsx)(n.code,{children:"WELSPECS"}),",\n",(0,t.jsx)(n.code,{children:"WELSEGS"}),", ",(0,t.jsx)(n.code,{children:"COMPSEGS"}),", and ",(0,t.jsx)(n.code,{children:"COMPDAT"}),".\nThese keywords are produced from pre-processor reservoir modelling tools to define multi-segment well initial configuration."]}),"\n",(0,t.jsx)(n.li,{children:"A user defined text file, also called a case file,\nspecifying the completion design, including inflow control devices and annulus content.\nThe information in the input schedule file and the case file is combined\nand written to a new schedule file to be included in the reservoir simulation schedule section."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Completor\xae is a Command-Line Interface (CLI), called by the following syntax:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"completor -i <case_file> -s <schedule_file> -o <output_schedule_location> --figure --loglevel <number>\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"completor"})})," Calls the program."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"-i <case_file>"})})," The filepath with name and extension to the case file. E.g. ",(0,t.jsx)(n.code,{children:"some/folder/my_case_file.case"}),".\nThis is the only strictly required keyword."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"-s <schedule_file>"})})," The filepath with name and extension to the schedule file.\nE.g. ",(0,t.jsx)(n.code,{children:"some/folder/my_input.sch"}),".\nThis keyword is optional, as it's possible to set the path to schedule-file from the case-file.\nBut the file itself is not optional, thus it must be set in at least one place!"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"-o <output_schedule_location>"})})," The filepath with name and extension to the schedule file.\nE.g. ",(0,t.jsx)(n.code,{children:"some/folder/advanced_schedule.sch"}),".\nThis keyword is optional, and if not set, will default the same name as input plus ",(0,t.jsx)(n.code,{children:"advanced.wells"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"--figure"})})," If present, generates simple diagrams of the well completion."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"--loglevel <number>"})})," Set the wanted log-level. Default is 30, aka ",(0,t.jsx)(n.code,{children:"WARNING"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"-h or --help"})})," To display simple help, similar to this."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The input schedule file is generated by some reservoir modelling pre-processing tool.\nThus, the main focus lies on the configuration of the case file.\nThe following section provides guidance on how to set up the case file by a range of pre-defined keywords (in capital letters)."}),"\n",(0,t.jsx)(n.h2,{id:"keywords",children:"Keywords"}),"\n",(0,t.jsxs)(n.p,{children:["Completor has several keywords to cover variations of well completion and its setup on the simulation.\nThere are several keywords that can be set as ",(0,t.jsx)(n.code,{children:"optional"})," while the one with ",(0,t.jsx)(n.code,{children:"*"})," is mandatory to be set,\notherwise Completor will fail and exit."]}),"\n",(0,t.jsx)(n.h3,{id:"completion",children:"COMPLETION"}),"\n",(0,t.jsx)(n.p,{children:"The content of this keyword describes the completion configuration. The\nCOMPLETION keyword is mandatory and contains the following items:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Well"}),": Well name (must be identical to the well name specified in the schedule file)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Branch number"}),": This is the same branch number as specified in the schedule file.\nMulti branch wells are allowed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Start MD"}),": Completion start measured depth in meter.\nNote:** Set the first start MD to be shallower than the shallowest MD of the first COMPSEGS segment,\nto make sure the entire COMPSEGS interval is covered.\nIf a single case file is used for all realizations in an ensemble,\nmake sure the start MD is shallower than the shallowest MD of all COMPSEGS definitions.\nFor simplicity, set the first start MD of every well to 0 m MD. See example Completion below."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"End MD"}),": Completion end measured depth in meter.\nNote:** Set the last end MD to be deeper than the deepest MD of the last COMPSEGS segment,\nto make sure the entire COMPSEGS interval is covered.\nIf a single case file is used for all realizations in an ensemble,\nmake sure the end MD is deeper than the deepest MD of all COMPSEGS definitions.\nFor simplicity, set the last end MD of every well to 99999 m MD. See example Completion below."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Screen/tubing diameter"}),": Diameter of the inner component, e.g. screens, tubing in meters.\nMainly used to calculate volume of annulus, thus recommended to use outer tubing diameter.\nCompletor\xae overwrites diameters defined in input schedule file."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Well/casing diameter"}),": Diameter of the outer component e.g. casing, wellbore in meter.\nCompletor\xae overwrites diameters defined in input schedule file."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pipe roughness"}),": Tubing roughness."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Annulus content"}),": Permitted entries: OA (Open Annulus), GP (Gravel Pack), and PA (Packer).\nThe packer must have zero length.\nPA needs not be defined in combination with GP.\nGP means that no flow is allowed along the annulus - just radially towards the devices."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Number of valves per joint"}),": Any floating point number.\nSet to 0 in intervals with blanks."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Valve type"}),": Permitted entries: PERF (standard perforation no inflow control valves),\nICD, VALVE, AICD, DENSITY, DUALRCP, or ICV."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Device number"}),": The device reference number specified in the Completor\xae configuration file keywords ",(0,t.jsx)(n.code,{children:"WSEGVALV"}),",\n",(0,t.jsx)(n.code,{children:"WSEGSICD"}),", ",(0,t.jsx)(n.code,{children:"WSEGAICD"}),", ",(0,t.jsx)(n.code,{children:"WSEGDENSITY"}),", ",(0,t.jsx)(n.code,{children:"WSEGDUALRCP"}),", or ",(0,t.jsx)(n.code,{children:"WSEGICV"}),".\nEnd the record with ",(0,t.jsx)(n.code,{children:"/"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"-- Creates a completion in well PROD1 branch 1 that has blank ortions from\n-- 0 to 2000 m MD and 3000 to 9999 m MD. AICD with one valve per joint and an\n-- open annulus is specified for the interval 2000 to 3000 m MD.\nCOMPLETION\n  -- Well  Branch  Start  End  Screen  Well/   Roughness  Annulus  Nvalve  Valve  Device\n  --       Number  mD     mD   Tubing  Casing             Content  /Joint  Type   Number\n    PROD1     1       0  2000   0.1     0.2      1E-5       GP       0     AICD     1\n    PROD1     1    2000  3000   0.1     0.2      1E-5       OA       1     AICD     1\n    PROD1     1    3000  9999   0.1     0.2      1E-5       GP       0     AICD     1\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"jointlength-optional",children:"JOINTLENGTH (optional)"}),"\n",(0,t.jsx)(n.p,{children:"The length (in meter) of a joint.\nThe default value is 12 meters.\nEnd the record with /."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"JOINTLENGTH\n-- Sets the joint length to 12 meters.\n  12.0\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"segmentlength-optional",children:"SEGMENTLENGTH (optional)"}),"\n",(0,t.jsx)(n.p,{children:"This keyword is optional and should be used consciously.\nThe SEGMENTLENGTH keyword controls how Completor\xae handles the tubing segment structure.\nCompletor\xae has four different options for handling the tubing segment structure."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["If the ",(0,t.jsx)(n.code,{children:"SEGMENTLENGTH"})," keyword is omitted or set to zero Completor\xae generates segments based on grid cell size,\nwhich is the Completor\xae default for generating well segments."]}),"\n",(0,t.jsxs)(n.li,{children:["If the ",(0,t.jsx)(n.code,{children:"SEGMENTLENGTH"})," is positive, Completor\xae will create segments according to the given value (in meters)."]}),"\n",(0,t.jsxs)(n.li,{children:["If the ",(0,t.jsx)(n.code,{children:"SEGMENTLENGTH"})," is negative,\nCompletor\xae will pick segment start and end MDs from the COMPLETION keyword of the case file,\nallowing for flexible (user defined) segment lengths.\nCompletor\xae will attempt to honor the segment boundaries specified by the user when allocating grid-blocks to segments."]}),"\n",(0,t.jsxs)(n.li,{children:["If the ",(0,t.jsx)(n.code,{children:"SEGMENTLENGTH"})," keyword is set to \u201cWELSEGS\u201d Completor\xae will use the input segment structure (COMPSEGS) as basis,\nand fill in with missing WELSEGS segments."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For option 1 Completor\xae redefines WELSEGS segment lengths based on COMPSEGS.\nFor simple well structures and uniform completion designs, this has no implications.\nFor more complex wells with alternating open and closed well sections, this may cause coarse segment structure,\nwhich may shift well junctions in multilateral wells.\nIf run time is an issue, coarser segments can reduce the simulation time,\nbut it comes with modest change in simulation results.\nNote:\nAll wells modeled with Completor\xae will have the same segmentation method specified with the ",(0,t.jsx)(n.code,{children:"SEGMENTLENGTH"})," keyword.\nEnd the record with /."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"SEGMENTLENGTH\n-- Sets the segmentation method to be based on the cell tructure (COMPSEGS\n-- start MD and end MD).\n  0\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"minimum_segment_length-optional",children:"MINIMUM_SEGMENT_LENGTH (optional)"}),"\n",(0,t.jsx)(n.p,{children:"If activated, Completor\xae sets the minimum segment length as specified.\nThe MINIMUM_SEGMENT_LENGTH has to be set in Completor\xae if you activated the minimum segment length option is your pre-processing tools.\nNote:** This will set the minimum segment length for all wells modelled by Completor\xae.\nEnd the record with /."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"MINIMUM_SEGMENT_LENGTH\n-- Sets the mimumum segment length to 12 meter\n  12.0\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"use_strict-optional",children:"USE_STRICT (optional)"}),"\n",(0,t.jsx)(n.p,{children:"It allows for branches defined in the input schedule file that are not addressed in the case file to be automatically completed with PERF and GP.\nSet USE_STRICT to FALSE for automatic completion of branches/wells.\nThe default value for USE_STRICT is TRUE, i.e., the completion of all branches and wells must be defined in the case file.\nA complete description of well completions in the configuration file is our best practice.\nEnd the record with /."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"USE_STRICT\n-- Wells not defined in the COMPLETION keyword automatically ets a GP PERF\n-- completion.\n  FALSE\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"lateral_to_device-optional",children:"LATERAL_TO_DEVICE (optional)"}),"\n",(0,t.jsx)(n.p,{children:"The keyword takes a list of a well names and a branch numbers.\nThe branches listed here are routed to the device layer of the mother lateral.\nAll branches not listed here are automatically routed to the tubing layer of the mother lateral.\nEnd the list of wells and branch numbers with /."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"LATERAL_TO_DEVICE\n-- Connect branch number 2 in well PROD1 to the device layer f its mother\n-- branch.\n  PROD1  2\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"mapfile-optional",children:"MAPFILE (optional)"}),"\n",(0,t.jsx)(n.p,{children:"It gives a file name for a text file containing two columns of well names.\nOn the left are well names used in the input schedule file and in the case file.\nThe output schedule file will have the corresponding well names of the right-hand column.\nEnd the keyword with /."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"MAPFILE\n-- Use the columns in the following file to change input and output well names.\n  '../include/filemapper.wellnames'\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"gp_perf_devicelayer-optional",children:"GP_PERF_DEVICELAYER (optional)"}),"\n",(0,t.jsx)(n.p,{children:"Completor\xae will by default ignore wells with gravel-pack and perforations.\nHowever, if a device layer for these types of wells is desired, then set this keyword to TRUE.\nAll wells defined with GP and PERF will get an empty device layer.\nEnd the keyword with /."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"GP_PERF_DEVICELAYER\n-- All wells in the COMPLETION keyword defined with GP PERF ill have an\n-- empty device layer in the output schedule.\n  TRUE\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"python-optional",children:"PYTHON (optional)"}),"\n",(0,t.jsxs)(n.p,{children:["This is a new development in Completor\xae to cover python dependent logic. It supports\nPython dependency on OPM Flow using PYACTION keyword. (",(0,t.jsx)(n.a,{href:"https://opm.github.io/opm-python-documentation/master/index.html",children:"Read about PYACTION"}),")\nThe default value is this to be set as False, therefore it will print standard ACTIONX keyword."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"PYTHON\nTRUE\n/\n"})}),"\n",(0,t.jsx)(n.h2,{id:"valve-keywords",children:"Valve Keywords"}),"\n",(0,t.jsxs)(n.p,{children:["Below are the keywords related into the column number 10 in the ",(0,t.jsx)(n.code,{children:"COMPLETION"})," keyword specified above."]}),"\n",(0,t.jsxs)(n.p,{children:["The valve keywords are mandatory if the valve is specified in the ",(0,t.jsx)(n.code,{children:"COMPLETION"})," table.\nOtherwise, Completor will fail and exit. Below are the explanations on devices supported in Completor:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AICD"}),", the usage is followed by ",(0,t.jsx)(n.code,{children:"WSEGAICD"})," keyword. This will generate a device based on standard RCP equation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"VALVE"}),", the usage is followed by ",(0,t.jsx)(n.code,{children:"WSEGVALV"})," keyword. This device and keyword will generate a nozzle ICD that accepts discharge coefficient (Cv), opening area, and maximum opening area of the nozzle throat."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ICD"}),", the usage is followed by ",(0,t.jsx)(n.code,{children:"WSEGSICD"})," keyword. This will generate a spiral ICD equation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DENSITY"}),", the usage is followed by ",(0,t.jsx)(n.code,{children:"WSEGDENSITY"})," keyword. This will generate a density driven device with certain limit on opening and closing of devices dependent on water or gas volume fraction."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DUALRCP"}),", the usage is followed by ",(0,t.jsx)(n.code,{children:"WSEGDUALRCP"})," keyword. This keyword is intended to mimic performance curve with a step-rate based on certain gas or water volume fraction."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ICV"}),", the usage is followed by ",(0,t.jsx)(n.code,{children:"WSEGICV"})," keyword. This keyword will generate either zonal or branch ICV dependent on length or interval given in the ",(0,t.jsx)(n.code,{children:"COMPLETION"})," keyword."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"INJV"}),", the usage is followed by ",(0,t.jsx)(n.code,{children:"WSEGINJV"})," keyword. This will generate an injection valve with certain limit on opening and closing of devices on pressure drop or water rate."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"wsegaicd",children:"WSEGAICD"}),"\n",(0,t.jsxs)(n.p,{children:["This keyword will define AICD devices based on RCP equation.\nRequired only if ",(0,t.jsx)(n.code,{children:"AICD"})," is used in the ",(0,t.jsx)(n.code,{children:"COMPLETION"})," keyword.\nEnd the record with /.\nThe items are as follows:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Device number: From 1, 2, .., n etc."}),"\n",(0,t.jsx)(n.li,{children:"Alpha: Item 4 in WSEGAICD keyword."}),"\n",(0,t.jsx)(n.li,{children:"x: Item 13 in WSEGAICD keyword."}),"\n",(0,t.jsx)(n.li,{children:"y: Item 14 in WSEGAICD keyword."}),"\n",(0,t.jsx)(n.li,{children:"a: Item 16 in WSEGAICD keyword."}),"\n",(0,t.jsx)(n.li,{children:"b: Item 17 in WSEGAICD keyword."}),"\n",(0,t.jsx)(n.li,{children:"c: Item 18 in WSEGAICD keyword."}),"\n",(0,t.jsx)(n.li,{children:"d: Item 19 in WSEGAICD keyword."}),"\n",(0,t.jsx)(n.li,{children:"e: Item 20 in WSEGAICD keyword."}),"\n",(0,t.jsx)(n.li,{children:"f: Item 21 in WSEGAICD keyword."}),"\n",(0,t.jsx)(n.li,{children:"Calibration density: Item 6 in WSEGAICD  keyword."}),"\n",(0,t.jsx)(n.li,{children:"Calibration viscosity: Item 7 in WSEGAICD  keyword."}),"\n",(0,t.jsx)(n.li,{children:"z: Item 22 in WSEGAICD keyword."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"WSEGAICD\n-- Define two AICD devices with sligthly different parameters.\n-- Do not use the parameters below in planning/operations.\n-- Consult the inflow control team for valid parameters.\n-- DN  Alpha   x   y  a  b  c  d  e  f  den_cal  mu_cal z\n    1 1.0e-4 0.1 1.2  1  1  1  1  1  5     1000       1 1\n    2 5.0e-5 0.4 3.1  1  1  1  2  1  1     1000       1 1\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"wsegsicd",children:"WSEGSICD"}),"\n",(0,t.jsxs)(n.p,{children:["This keyword will produce spiral ICDs device based on SICD equation.\nFor a nozzle ICD, use ",(0,t.jsx)(n.code,{children:"WSEGVALV"})," and ",(0,t.jsx)(n.code,{children:"VALVE"})," keyword.\nRequired only if ",(0,t.jsx)(n.code,{children:"ICD"})," is used in the ",(0,t.jsx)(n.code,{children:"COMPLETION"})," keyword.\nEnd the record with /.\nThe items are as follows:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Device number: From 1, 2, .., n etc."}),"\n",(0,t.jsx)(n.li,{children:"ICD strength: Item 4 in WSEGSICD keyword."}),"\n",(0,t.jsx)(n.li,{children:"Calibration density: Item 6 in WSEGSICD keyword."}),"\n",(0,t.jsx)(n.li,{children:"Calibration viscosity: Item 7 in WSEGSICD keyword."}),"\n",(0,t.jsx)(n.li,{children:"Water fraction: Item 8 in WSEGSICD  keyword."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"WSEGSICD\n-- Define two ICD devices with sligthly different parameters.\n-- Do not use the parameters below in planning/operations.\n-- Consult the inflow control team for valid parameters.\n-- DN  Strength  rho_cal  mu_cal  water_fraction\n    1    1.0e-4   1000.0     1.0             0.5\n    2    5.0e-5   1000.0     1.0             0.7\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"wsegvalv",children:"WSEGVALV"}),"\n",(0,t.jsxs)(n.p,{children:["Define full parameter sets for nozzle ICD or e-ICD type completions.\nRequired only if ",(0,t.jsx)(n.code,{children:"VALVE"})," is used in the ",(0,t.jsx)(n.code,{children:"COMPLETION"})," keyword.\nUse this if you want to model nozzle \xccCD.\nEnd the record with /.\nThe items are as follows:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Device number: From 1, 2, .., n etc."}),"\n",(0,t.jsx)(n.li,{children:"Cv: Item 3 in WSEGVALV keyword."}),"\n",(0,t.jsx)(n.li,{children:"Ac: Item 4 in WSEGVALV keyword."}),"\n",(0,t.jsx)(n.li,{children:"Defaults: Item 5-9 in WSEGVALV keyword."}),"\n",(0,t.jsx)(n.li,{children:"Ac_Max: Item 10 in WSEGVALV keyword."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"WSEGVALV\n-- Define two VALVE devices with slightly different arameters.\n-- Do not use the parameters below in planning/operations.\n-- Consult the inflow control team for valid parameters.\n-- DN    CV      AC  Defaults   Ac_Max\n    1    1  1.0E-4  5*         1.0E-4\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"wsegdensity",children:"WSEGDENSITY"}),"\n",(0,t.jsxs)(n.p,{children:["Density driven AICD, requires trigger for water and/or gas volume fraction.\nRequired only if ",(0,t.jsx)(n.code,{children:"DENSITY"})," is used in the ",(0,t.jsx)(n.code,{children:"COMPLETION"})," keyword.\nEnd the record with /.\nThe items are as follows:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Device number: From 1, 2, .., n etc."}),"\n",(0,t.jsx)(n.li,{children:"Cv: Item 3 in WSEGVALV keyword. Always set to 1.0 for density driven type."}),"\n",(0,t.jsx)(n.li,{children:"Cross-sectional flow area of the oil nozzle: Ac_o."}),"\n",(0,t.jsx)(n.li,{children:"Cross sectional flow area of the gas nozzle: Ac_g."}),"\n",(0,t.jsx)(n.li,{children:"Cross-sectional flow area of the water nozzle: Ac_w."}),"\n",(0,t.jsx)(n.li,{children:'Water volume fraction (reservoir condition) at which valve re-opens, WVF "low cut-off": wvf_low.'}),"\n",(0,t.jsx)(n.li,{children:'Water volume fraction (reservoir condition) at with valve closes, WVF "high cut-off": wvf_high.'}),"\n",(0,t.jsx)(n.li,{children:'Gas volume fraction (reservoir condition) at which valve re-opens, GVF "low cut-off": gvf_low.'}),"\n",(0,t.jsx)(n.li,{children:'Gas volume fraction (reservoir condition) at with valve closes, GVF "high cut-off": gvf_high.'}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"WSEGDENSITY\n-- Define two density driven AICD with slightly different paramters.\n-- Do not use the parameters below in planning/operations.\n-- Consult the inflow control team for valid parameters.\n-- DN   CV  Ac_o  Ac_g  Ac_w  wvf_low  wvf_high  gvf_low  vf_high\n    1  1.0  7e-4  1e-4  1e-4      0.7       0.9      0.6       0.8\n    2  1.0  5e-4  1e-4  1e-4      0.6       0.8      0.7       0.9\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"wsegdualrcp",children:"WSEGDUALRCP"}),"\n",(0,t.jsxs)(n.p,{children:["This keyword utilizes two different ",(0,t.jsx)(n.code,{children:"WSEGAICD"})," parameter.\nThis keyword acts as two different ",(0,t.jsx)(n.code,{children:"RCP"})," equation at certain cutoff to cover steep performance curve.\nRequired only if ",(0,t.jsx)(n.code,{children:"DUALRCP"})," is used in the ",(0,t.jsx)(n.code,{children:"COMPLETION"})," keyword.\nEnd the record with /.\nThe items are as follows:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Device number: From 1, 2, .., n etc."}),"\n",(0,t.jsx)(n.li,{children:"WVF: Cut-off water volume fraction, at which the flow goes to the pilot channel."}),"\n",(0,t.jsx)(n.li,{children:"GVF: Cut-off gas volume fraction at which the flow goes to the pilot channel."}),"\n",(0,t.jsx)(n.li,{children:"Rho_cal: Calibration density."}),"\n",(0,t.jsx)(n.li,{children:"Mu_cal: Calibration viscosity."}),"\n",(0,t.jsx)(n.li,{children:"(6\u201314) Parameters for the AICD main channel.\nThe same parameters as AICD e.g., alpha, x, y, a, b, c, d, e, f.\nSee WSEGAICD keyword."}),"\n",(0,t.jsx)(n.li,{children:"(15-23) Parameters for the AICD pilot channel.\nThe same parameters as AICD e.g., alpha, x, y, a, b, c, d, e, f.\nSee WSEGAICD keyword."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"WSEGDUALRCP\n-- Defines full parameter sets for the inflow control technology using two sets of AICD equation.\n-- Do not use the parameters below in planning/operations.\n-- Consult the inflow control team for valid parameters.\n-- DB  WVF  GVF  rho_cal  mu_cal  alpha1  x1  y1  a1  b1  c1  1  e1  f1 alpha2  x2  y2  a2  b2  c2  d2  e2  f2\n    1  0.5  0.5   1000.0     1.0    7e-5   1   2   1   1   1   2   1   1   1e-5   2   1   1   1   1   2   2   3\n    2  0.7  0.4   1000.0     1.0    8e-5   1   1   1   1   1   2   4   1   2e-5   1   1   1   1   1   2   2   2\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"wsegicv",children:"WSEGICV"}),"\n",(0,t.jsxs)(n.p,{children:["Defines ICV type of valve for both zonal and branch control.\nRequired only if ",(0,t.jsx)(n.code,{children:"ICV"})," is used in the ",(0,t.jsx)(n.code,{children:"COMPLETION"})," keyword.\nIt will produce ",(0,t.jsx)(n.code,{children:"WSEGVALV"})," keyword similar to nozzle ICD setup.\nEnd the record with /.\nThe items are as follows:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Device number : from 1, 2, .., n etc."}),"\n",(0,t.jsx)(n.li,{children:"Cv : item 3 in WSEGVALV keyword."}),"\n",(0,t.jsx)(n.li,{children:"Ac : item 4 in WSEGVALV keyword."}),"\n",(0,t.jsx)(n.li,{children:"Ac_max : item 10 in WSEGVALV keyword\nEnd the record with /."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"WSEGICV\n-- Do not use the parameters below in planning/operations.\n-- Consult the inflow control team for valid parameters.\n-- DeviceNumber  Cv        Ac        Ac_max\n1                0.95      4.32e-4   7.50e-4\n2                1.10      1.56e-4   7.50e-4\n3                1.00      0.05      0.05\n/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"wseginjv",children:"WSEGINJV"}),"\n",(0,t.jsxs)(n.p,{children:["Injection valve, requires trigger for either pressure drop or water rate.\nRequired only if ",(0,t.jsx)(n.code,{children:"INJV"})," is used in the ",(0,t.jsx)(n.code,{children:"COMPLETION"})," keyword.\nEnd the record with /.\nThe items are as follows:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Device number : from 1, 2, .., n etc."}),"\n",(0,t.jsx)(n.li,{children:"Trigger_Parameter : Parameter chosen to trigger the valve, e.g., either SPRD or SWFR"}),"\n",(0,t.jsx)(n.li,{children:"Trigger value: Values of the trigger parameter used"}),"\n",(0,t.jsx)(n.li,{children:"Cv_Inj : item 3 in WSEGVALV keyword."}),"\n",(0,t.jsx)(n.li,{children:"Ac_Primary: Cross-sectional flow area of the larger nozzle"}),"\n",(0,t.jsx)(n.li,{children:"Ac_Secondary: Cross-sectional flow area of the smaller nozzle\nEnd the record with /."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"WSEGINJV\n-- Do not use the parameters below in planning/operations.\n-- Consult the inflow control team for valid parameters.\n-- DeviceNumber   Trigger_Parameter   Trigger value   Cv_Inj   Ac_Primary   Ac_Secondary\n1                 SPRD                0.5             1.00     4.700e-04    8e-5\n2                 SWFR                150             1.00     4.700e-04    8e-5\n/\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var l=i(6540);const t={},o=l.createContext(t);function s(e){const n=l.useContext(o);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),l.createElement(o.Provider,{value:n},e.children)}}}]);